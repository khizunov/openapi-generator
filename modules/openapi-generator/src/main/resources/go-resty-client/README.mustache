{{#appDescriptionWithNewLines}}
    # Go API client for {{{.}}}
{{/appDescriptionWithNewLines}}

## Overview
This API client was generated by the [OpenAPI Generator](https://openapi-generator.tech) project.  By using the [OpenAPI-spec](https://www.openapis.org/) from a remote server, you can easily generate an API client.

- API version: {{appVersion}}
- Package version: {{packageVersion}}
{{^hideGenerationTimestamp}}
    - Build date: {{generatedDate}}
{{/hideGenerationTimestamp}}
- Generator version: {{generatorVersion}}
- Build package: {{generatorClass}}
{{#infoUrl}}
    For more information, please visit [{{{infoUrl}}}]({{{infoUrl}}})
{{/infoUrl}}

## Installation

Install the following dependencies:
```bash
    go get github.com/go-resty/resty/v2@latest
    go get github.com/google/go-querystring/query@latest
```

Install the package with (use specific version if needed):
```bash
    go get {{gitHost}}/{{gitUserId}}/{{gitRepoId}}@latest
```

## Usage

Put the package under your project folder and add the following in import:

```go
import (
    "context"
    "net/http"
    "net/url"
    "time"

    {{packageName}} "{{gitHost}}/{{gitUserId}}/{{gitRepoId}}/{{#packagePath}}{{.}}/{{/packagePath}}{{packageName}}"
    common "{{gitHost}}/{{gitUserId}}/{{gitRepoId}}/{{#packagePath}}{{.}}/{{/packagePath}}{{packageName}}/common"
)
```

Create a new instance of the API client with basic configuration:
```go
c := client.New(&client.RestyConfig{
    URL: &url.URL{
        Host:   "localhost:8080", // default is client.DefaultURL
    },
})
```

Use the client to make API calls:
{{#apiInfo}}
{{#apis}}
{{#operations}}
{{#-first}}
{{#operation}}
{{#-first}}
```go
p := {{packageName}}.New{{operationId}}Params(...)
r, err := c.{{classname}}.{{operationId}}(context.Background(), p,
    common.Headers(http.Header{
        "Authorization": []string{"Bearer token"},
    }),
    common.Timeout(5*time.Second),
)

if err != nil {
    fmt.Println(err)
}

resp := r.Payload
fmt.Println(resp)
```
{{/-first}}
{{/operation}}
{{/-first}}
{{/operations}}
{{/apis}}
{{/apiInfo}}

More configuration options are available in the `RestyConfig` struct:
```go
config := &client.RestyConfig{
    URL: &url.URL{
        Host:   "localhost:8080", // default is client.DefaultURL
    },
    Transport: http.DefaultTransport,
    RetryOptions: &client.RestyRetryConfig{
        Count:      3,
        WaitTime:   100 * time.Millisecond,
        MaxWaitTime: 2 * time.Second,
    },
    RestyLogger: nil, // e.g. logrus.New()
    RestyDebug:  true, // if enabled will log request/response details
}
```